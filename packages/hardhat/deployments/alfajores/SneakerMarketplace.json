{
  "address": "0x66fC8a09920b88765Af8264cbaC4162e94c1A9e5",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sneakerId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "imageUrl",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "color",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "size",
          "type": "string"
        }
      ],
      "name": "SneakerListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sneakerId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "SneakerTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "SwapApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mySneakerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "theirSneakerId",
          "type": "uint256"
        }
      ],
      "name": "SwapRequested",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allSwapRequestIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "imageUrl",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "color",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "size",
          "type": "string"
        }
      ],
      "name": "createSneaker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSwapRequests",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "requester",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "mySneakerId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "theirSneakerId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "internalType": "struct SneakerMarketplace.SwapRequest[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListedSneakers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageUrl",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "color",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "size",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "listed",
              "type": "bool"
            }
          ],
          "internalType": "struct SneakerMarketplace.Sneaker[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMySneakers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageUrl",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "color",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "size",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "listed",
              "type": "bool"
            }
          ],
          "internalType": "struct SneakerMarketplace.Sneaker[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMySwapRequests",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "requester",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "mySneakerId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "theirSneakerId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "internalType": "struct SneakerMarketplace.SwapRequest[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSwapRequestLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sneakerId",
          "type": "uint256"
        }
      ],
      "name": "listSneaker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sneakers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "imageUrl",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "color",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "size",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "listed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "swapRequests",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "mySneakerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "theirSneakerId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mySneakerId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "otherUser",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "theirSneakerId",
          "type": "uint256"
        }
      ],
      "name": "swapSneaker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3710cd4befc92a4cafeeb2cd2a3662a95b0f763097cf627774007d9f217be40e",
  "receipt": {
    "to": null,
    "from": "0xA8524D64Ec0c33434727c005A23441e94dc8d92E",
    "contractAddress": "0x66fC8a09920b88765Af8264cbaC4162e94c1A9e5",
    "transactionIndex": 0,
    "gasUsed": "2510097",
    "logsBloom": "0x
    "blockHash": "0x077ddea42241e3ea4a28839ca848dcf25165cecf6e9ad37297799f8569dfe9e0",
    "transactionHash": "0x3710cd4befc92a4cafeeb2cd2a3662a95b0f763097cf627774007d9f217be40e",
    "logs": [],
    "blockNumber": 20885116,
    "cumulativeGasUsed": "2510097",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "52cbc742a81af040589414d96a367d7e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sneakerId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"imageUrl\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"size\",\"type\":\"string\"}],\"name\":\"SneakerListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sneakerId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SneakerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"SwapApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mySneakerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"theirSneakerId\",\"type\":\"uint256\"}],\"name\":\"SwapRequested\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allSwapRequestIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUrl\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"size\",\"type\":\"string\"}],\"name\":\"createSneaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSwapRequests\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mySneakerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"theirSneakerId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"internalType\":\"struct SneakerMarketplace.SwapRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListedSneakers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUrl\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"size\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct SneakerMarketplace.Sneaker[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMySneakers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUrl\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"size\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct SneakerMarketplace.Sneaker[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMySwapRequests\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mySneakerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"theirSneakerId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"internalType\":\"struct SneakerMarketplace.SwapRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapRequestLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sneakerId\",\"type\":\"uint256\"}],\"name\":\"listSneaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sneakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUrl\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"size\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"swapRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mySneakerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"theirSneakerId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mySneakerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"otherUser\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"theirSneakerId\",\"type\":\"uint256\"}],\"name\":\"swapSneaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getListedSneakers()\":{\"details\":\"Get a list of all sneakers currently listed in the marketplace.\",\"returns\":{\"_0\":\"An array of Sneaker structs representing the listed sneakers.\"}},\"getMySneakers()\":{\"details\":\"Get a list of sneakers owned by the caller.\",\"returns\":{\"_0\":\"An array of Sneaker structs representing the user's sneakers.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SneakerMarketPlace.sol\":\"SneakerMarketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"contracts/SneakerMarketPlace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\n\\ncontract SneakerMarketplace {\\n    using Counters for Counters.Counter;\\n    Counters.Counter private _sneakerIds;\\n    Counters.Counter private _swapIds;\\n\\n    address payable owner;\\n\\n    struct Sneaker {\\n        uint256 id;\\n        address owner;\\n        string name;\\n        string imageUrl;\\n        string color;\\n        string size;\\n        bool listed;\\n    }\\n\\n    struct SwapRequest {\\n        uint256 id;\\n        address requester;\\n        address owner;\\n        uint256 mySneakerId;\\n        uint256 theirSneakerId;\\n        bool approved;\\n    }\\n\\n    mapping(uint256 => Sneaker) public sneakers;\\n    mapping(uint256 => SwapRequest) public swapRequests;\\n    uint256[] public allSwapRequestIds;\\n\\n    event SneakerListed(uint256 indexed sneakerId, address indexed owner, string name, string imageUrl, string color, string size);\\n    event SwapRequested(uint256 indexed requestId, address indexed requester, address indexed owner, uint256 mySneakerId, uint256 theirSneakerId);\\n    event SwapApproved(uint256 indexed requestId);\\n    event SneakerTransferred(uint256 indexed sneakerId, address indexed from, address indexed to);\\n\\n    constructor() {\\n        owner = payable(msg.sender);\\n    }\\n\\n    function createSneaker(string memory name, string memory imageUrl, string memory color, string memory size) public {\\n        _sneakerIds.increment();\\n        uint256 newSneakerId = _sneakerIds.current();\\n        sneakers[newSneakerId] = Sneaker(newSneakerId, msg.sender, name, imageUrl, color, size, false);\\n        emit SneakerListed(newSneakerId, msg.sender, name, imageUrl, color, size);\\n    }\\n\\n    function listSneaker(uint256 sneakerId) public {\\n        require(sneakers[sneakerId].owner == msg.sender, \\\"Only the owner can list the sneaker\\\");\\n        require(!sneakers[sneakerId].listed, \\\"Sneaker is already listed\\\");\\n        sneakers[sneakerId].listed = true;\\n    }\\n\\n//    temporarily disabling this feature\\n\\n    // function requestSwap(uint256 mySneakerId, address otherUser, uint256 theirSneakerId) public {\\n    //     require(msg.sender != otherUser, \\\"Cannot swap with yourself\\\");\\n    //     require(sneakers[mySneakerId].owner == msg.sender, \\\"You do not own the selected sneaker\\\");\\n    //     require(sneakers[theirSneakerId].owner == otherUser, \\\"The other user does not own the selected sneaker\\\");\\n    //     require(sneakers[mySneakerId].listed, \\\"Sneaker must be listed to be requested for a swap\\\");\\n\\n    //     _swapIds.increment();\\n    //     uint256 newSwapId = _swapIds.current();\\n    //     swapRequests[newSwapId] = SwapRequest(newSwapId, msg.sender, otherUser, mySneakerId, theirSneakerId, false);\\n    //     allSwapRequestIds.push(newSwapId);\\n    //     emit SwapRequested(newSwapId, msg.sender, otherUser, mySneakerId, theirSneakerId);\\n    // }\\n\\n    // function approveSwap(uint256 requestId) public {\\n    //     uint256 mySneakerId = swapRequests[requestId].mySneakerId;\\n    //     uint256 theirSneakerId = swapRequests[requestId].theirSneakerId;\\n\\n    //     require(sneakers[theirSneakerId].owner == msg.sender, \\\"Only the owner can approve the swap\\\");\\n    //     require(!swapRequests[requestId].approved, \\\"Swap request has already been approved\\\");\\n\\n    //     // Swap the ownership of the sneakers directly\\n    //     sneakers[mySneakerId].owner = swapRequests[requestId].owner;\\n    //     sneakers[theirSneakerId].owner = swapRequests[requestId].requester;\\n\\n    //     swapRequests[requestId].approved = true;\\n    //     sneakers[mySneakerId].listed = false;\\n    //     sneakers[theirSneakerId].listed = false;\\n\\n    //     emit SwapApproved(requestId);\\n    //     emit SneakerTransferred(mySneakerId, msg.sender, sneakers[mySneakerId].owner);\\n    //     emit SneakerTransferred(theirSneakerId, sneakers[theirSneakerId].owner, msg.sender);\\n    // }\\n\\n\\n    function swapSneaker (uint256 mySneakerId, address otherUser, uint256 theirSneakerId) public {\\n        require(msg.sender != otherUser, \\\"Cannot swap with yourself\\\");\\n        require(sneakers[mySneakerId].owner == msg.sender, \\\"You do not own the selected sneaker\\\");\\n        require(sneakers[theirSneakerId].owner == otherUser, \\\"The other user does not own the selected sneaker\\\");\\n        require(sneakers[mySneakerId].listed, \\\"Sneaker must be listed to be requested for a swap\\\");\\n\\n        // Swap the ownership of the sneakers directly\\n        sneakers[mySneakerId].owner = otherUser;\\n        sneakers[theirSneakerId].owner = msg.sender;\\n\\n        sneakers[mySneakerId].listed = false;\\n        sneakers[theirSneakerId].listed = false;\\n\\n        emit SneakerTransferred(mySneakerId, msg.sender, sneakers[mySneakerId].owner);\\n        emit SneakerTransferred(theirSneakerId, sneakers[theirSneakerId].owner, msg.sender);\\n    }\\n\\n\\n    /**\\n        * @dev Get a list of sneakers owned by the caller.\\n     * @return An array of Sneaker structs representing the user's sneakers.\\n     */\\n    function getMySneakers() public view returns (Sneaker[] memory) {\\n        uint totalSneakers = _sneakerIds.current();\\n        uint sneakerCount = 0;\\n        uint currentIndex = 0;\\n\\n        for (uint i = 0; i < totalSneakers; i++) {\\n            if (sneakers[i + 1].owner == msg.sender) {\\n                sneakerCount += 1;\\n            }\\n        }\\n\\n        Sneaker[] memory mySneakers = new Sneaker[](sneakerCount);\\n        for (uint i = 0; i < totalSneakers; i++) {\\n            if (sneakers[i + 1].owner == msg.sender) {\\n                uint currentId = i + 1;\\n                Sneaker storage currentSneaker = sneakers[currentId];\\n                mySneakers[currentIndex] = currentSneaker;\\n                currentIndex += 1;\\n            }\\n        }\\n\\n        return mySneakers;\\n    }\\n\\n    function getSwapRequestLength() public view returns (uint) {\\n        return allSwapRequestIds.length;\\n    }\\n\\n    function getAllSwapRequests() public view returns (SwapRequest[] memory) {\\n        uint totalRequests = allSwapRequestIds.length;\\n        SwapRequest[] memory allRequests = new SwapRequest[](totalRequests);\\n\\n        for (uint i = 0; i < totalRequests; i++) {\\n            uint requestId = allSwapRequestIds[i];\\n            allRequests[i] = swapRequests[requestId];\\n        }\\n\\n        return allRequests;\\n    }\\n\\n    function getMySwapRequests() public view returns (SwapRequest[] memory) {\\n        uint totalRequests = allSwapRequestIds.length;\\n        uint requestCount = 0;\\n        uint currentIndex = 0;\\n\\n        for (uint i = 0; i < totalRequests; i++) {\\n            uint requestId = allSwapRequestIds[i];\\n            if (swapRequests[requestId].requester == msg.sender || swapRequests[requestId].owner == msg.sender) {\\n                requestCount += 1;\\n            }\\n        }\\n\\n        SwapRequest[] memory myRequests = new SwapRequest[](requestCount);\\n        for (uint i = 0; i < totalRequests; i++) {\\n            uint requestId = allSwapRequestIds[i];\\n            if (swapRequests[requestId].requester == msg.sender || swapRequests[requestId].owner == msg.sender) {\\n                myRequests[currentIndex] = swapRequests[requestId];\\n                currentIndex += 1;\\n            }\\n        }\\n\\n        return myRequests;\\n    }\\n\\n    /**\\n    * @dev Get a list of all sneakers currently listed in the marketplace.\\n     * @return An array of Sneaker structs representing the listed sneakers.\\n     */\\n    function getListedSneakers() public view returns (Sneaker[] memory) {\\n        uint totalSneakers = _sneakerIds.current();\\n        uint listedSneakerCount = 0;\\n        uint currentIndex = 0;\\n\\n        for (uint i = 0; i < totalSneakers; i++) {\\n            if (sneakers[i + 1].listed) {\\n                listedSneakerCount += 1;\\n            }\\n        }\\n\\n        Sneaker[] memory listedSneakers = new Sneaker[](listedSneakerCount);\\n        for (uint i = 0; i < totalSneakers; i++) {\\n            if (sneakers[i + 1].listed) {\\n                uint currentId = i + 1;\\n                Sneaker storage currentSneaker = sneakers[currentId];\\n                listedSneakers[currentIndex] = currentSneaker;\\n                currentIndex += 1;\\n            }\\n        }\\n\\n        return listedSneakers;\\n    }\\n}\\n\",\"keccak256\":\"0xf9f8c7a1eb0bc9bbc4458c60627b26fc5ebaf75fb4ba46e6b51f83b7b90884dd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612c21806100616000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063ce39fe2011610071578063ce39fe2014610171578063d50ed3a91461018f578063ecb75e1b146101ab578063ef50fd00146101db578063f2652a2c146101f9578063f9b1b92014610215576100a9565b8063504b5b5b146100ae5780637677fb92146100cc5780639c61d7a4146100ea578063bd2e065c1461011f578063c0ccb6b914610155575b600080fd5b6100b6610233565b6040516100c39190611df5565b60405180910390f35b6100d4610617565b6040516100e1919061201a565b60405180910390f35b61010460048036038101906100ff919061207c565b610aeb565b604051610116969594939291906120d6565b60405180910390f35b6101396004803603810190610134919061207c565b610b74565b60405161014c9796959493929190612181565b60405180910390f35b61016f600480360381019061016a919061207c565b610e03565b005b610179610f3d565b6040516101869190611df5565b60405180910390f35b6101a960048036038101906101a49190612341565b61110d565b005b6101c560048036038101906101c0919061207c565b6112ac565b6040516101d29190612418565b60405180910390f35b6101e36112d0565b6040516101f0919061201a565b60405180910390f35b610213600480360381019061020e919061245f565b611724565b005b61021d611b6c565b60405161022a9190612418565b60405180910390f35b60606000600580549050905060008060005b8381101561036a57600060058281548110610263576102626124b2565b5b906000526020600020015490503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061034157503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610356576001846103539190612510565b93505b50808061036290612544565b915050610245565b5060008267ffffffffffffffff81111561038757610386612216565b5b6040519080825280602002602001820160405280156103c057816020015b6103ad611b9d565b8152602001906001900390816103a55790505b50905060005b8481101561060c576000600582815481106103e4576103e36124b2565b5b906000526020600020015490503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806104c257503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b156105f857600460008281526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250508385815181106105dd576105dc6124b2565b5b60200260200101819052506001846105f59190612510565b93505b50808061060490612544565b9150506103c6565b508094505050505090565b606060006106256000611b79565b905060008060005b838110156106cd573373ffffffffffffffffffffffffffffffffffffffff166003600060018461065d9190612510565b815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106ba576001836106b79190612510565b92505b80806106c590612544565b91505061062d565b5060008267ffffffffffffffff8111156106ea576106e9612216565b5b60405190808252806020026020018201604052801561072357816020015b610710611c01565b8152602001906001900390816107085790505b50905060005b84811015610ae0573373ffffffffffffffffffffffffffffffffffffffff16600360006001846107599190612510565b815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610acd5760006001826107b59190612510565b90506000600360008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461084a906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610876906125bb565b80156108c35780601f10610898576101008083540402835291602001916108c3565b820191906000526020600020905b8154815290600101906020018083116108a657829003601f168201915b505050505081526020016003820180546108dc906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610908906125bb565b80156109555780601f1061092a57610100808354040283529160200191610955565b820191906000526020600020905b81548152906001019060200180831161093857829003601f168201915b5050505050815260200160048201805461096e906125bb565b80601f016020809104026020016040519081016040528092919081815260200182805461099a906125bb565b80156109e75780601f106109bc576101008083540402835291602001916109e7565b820191906000526020600020905b8154815290600101906020018083116109ca57829003601f168201915b50505050508152602001600582018054610a00906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2c906125bb565b8015610a795780601f10610a4e57610100808354040283529160200191610a79565b820191906000526020600020905b815481529060010190602001808311610a5c57829003601f168201915b505050505081526020016006820160009054906101000a900460ff161515151581525050848681518110610ab057610aaf6124b2565b5b6020026020010181905250600185610ac89190612510565b945050505b8080610ad890612544565b915050610729565b508094505050505090565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050160009054906101000a900460ff16905086565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054610bc3906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610bef906125bb565b8015610c3c5780601f10610c1157610100808354040283529160200191610c3c565b820191906000526020600020905b815481529060010190602001808311610c1f57829003601f168201915b505050505090806003018054610c51906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7d906125bb565b8015610cca5780601f10610c9f57610100808354040283529160200191610cca565b820191906000526020600020905b815481529060010190602001808311610cad57829003601f168201915b505050505090806004018054610cdf906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0b906125bb565b8015610d585780601f10610d2d57610100808354040283529160200191610d58565b820191906000526020600020905b815481529060010190602001808311610d3b57829003601f168201915b505050505090806005018054610d6d906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610d99906125bb565b8015610de65780601f10610dbb57610100808354040283529160200191610de6565b820191906000526020600020905b815481529060010190602001808311610dc957829003601f168201915b5050505050908060060160009054906101000a900460ff16905087565b3373ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ea7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9e9061265e565b60405180910390fd5b6003600082815260200190815260200160002060060160009054906101000a900460ff1615610f0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f02906126ca565b60405180910390fd5b60016003600083815260200190815260200160002060060160006101000a81548160ff02191690831515021790555050565b60606000600580549050905060008167ffffffffffffffff811115610f6557610f64612216565b5b604051908082528060200260200182016040528015610f9e57816020015b610f8b611b9d565b815260200190600190039081610f835790505b50905060005b8281101561110457600060058281548110610fc257610fc16124b2565b5b90600052602060002001549050600460008281526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250508383815181106110e5576110e46124b2565b5b60200260200101819052505080806110fc90612544565b915050610fa4565b50809250505090565b6111176000611b87565b60006111236000611b79565b90506040518060e001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815260200160001515815250600360008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816111ea9190612896565b5060608201518160030190816112009190612896565b5060808201518160040190816112169190612896565b5060a082015181600501908161122c9190612896565b5060c08201518160060160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16817fa17f2322d90c5b35b8f11084c3751ccc6ad650ef0952cf7cc1f6528e4c0bf8b28787878760405161129d9493929190612968565b60405180910390a35050505050565b600581815481106112bc57600080fd5b906000526020600020016000915090505481565b606060006112de6000611b79565b905060008060005b8381101561134657600360006001836112ff9190612510565b815260200190815260200160002060060160009054906101000a900460ff1615611333576001836113309190612510565b92505b808061133e90612544565b9150506112e6565b5060008267ffffffffffffffff81111561136357611362612216565b5b60405190808252806020026020018201604052801561139c57816020015b611389611c01565b8152602001906001900390816113815790505b50905060005b8481101561171957600360006001836113bb9190612510565b815260200190815260200160002060060160009054906101000a900460ff16156117065760006001826113ee9190612510565b90506000600360008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611483906125bb565b80601f01602080910402602001604051908101604052809291908181526020018280546114af906125bb565b80156114fc5780601f106114d1576101008083540402835291602001916114fc565b820191906000526020600020905b8154815290600101906020018083116114df57829003601f168201915b50505050508152602001600382018054611515906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054611541906125bb565b801561158e5780601f106115635761010080835404028352916020019161158e565b820191906000526020600020905b81548152906001019060200180831161157157829003601f168201915b505050505081526020016004820180546115a7906125bb565b80601f01602080910402602001604051908101604052809291908181526020018280546115d3906125bb565b80156116205780601f106115f557610100808354040283529160200191611620565b820191906000526020600020905b81548152906001019060200180831161160357829003601f168201915b50505050508152602001600582018054611639906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054611665906125bb565b80156116b25780601f10611687576101008083540402835291602001916116b2565b820191906000526020600020905b81548152906001019060200180831161169557829003601f168201915b505050505081526020016006820160009054906101000a900460ff1615151515815250508486815181106116e9576116e86124b2565b5b60200260200101819052506001856117019190612510565b945050505b808061171190612544565b9150506113a2565b508094505050505090565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178990612a15565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182d90612aa7565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146118da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d190612b39565b60405180910390fd5b6003600084815260200190815260200160002060060160009054906101000a900460ff1661193d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193490612bcb565b60405180910390fd5b816003600085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336003600083815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006003600085815260200190815260200160002060060160006101000a81548160ff02191690831515021790555060006003600083815260200190815260200160002060060160006101000a81548160ff0219169083151502179055506003600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16847f1f8dc5fa55799883a53d8c121a73aaec7d7f62120bffa74610ad588f4493d06960405160405180910390a43373ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16827f1f8dc5fa55799883a53d8c121a73aaec7d7f62120bffa74610ad588f4493d06960405160405180910390a4505050565b6000600580549050905090565b600081600001549050919050565b6001816000016000828254019250508190555050565b6040518060c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001606081526020016000151581525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611c9581611c82565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cc682611c9b565b9050919050565b611cd681611cbb565b82525050565b60008115159050919050565b611cf181611cdc565b82525050565b60c082016000820151611d0d6000850182611c8c565b506020820151611d206020850182611ccd565b506040820151611d336040850182611ccd565b506060820151611d466060850182611c8c565b506080820151611d596080850182611c8c565b5060a0820151611d6c60a0850182611ce8565b50505050565b6000611d7e8383611cf7565b60c08301905092915050565b6000602082019050919050565b6000611da282611c56565b611dac8185611c61565b9350611db783611c72565b8060005b83811015611de8578151611dcf8882611d72565b9750611dda83611d8a565b925050600181019050611dbb565b5085935050505092915050565b60006020820190508181036000830152611e0f8184611d97565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e7d578082015181840152602081019050611e62565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ea582611e43565b611eaf8185611e4e565b9350611ebf818560208601611e5f565b611ec881611e89565b840191505092915050565b600060e083016000830151611eeb6000860182611c8c565b506020830151611efe6020860182611ccd565b5060408301518482036040860152611f168282611e9a565b91505060608301518482036060860152611f308282611e9a565b91505060808301518482036080860152611f4a8282611e9a565b91505060a083015184820360a0860152611f648282611e9a565b91505060c0830151611f7960c0860182611ce8565b508091505092915050565b6000611f908383611ed3565b905092915050565b6000602082019050919050565b6000611fb082611e17565b611fba8185611e22565b935083602082028501611fcc85611e33565b8060005b858110156120085784840389528151611fe98582611f84565b9450611ff483611f98565b925060208a01995050600181019050611fd0565b50829750879550505050505092915050565b600060208201905081810360008301526120348184611fa5565b905092915050565b6000604051905090565b600080fd5b600080fd5b61205981611c82565b811461206457600080fd5b50565b60008135905061207681612050565b92915050565b60006020828403121561209257612091612046565b5b60006120a084828501612067565b91505092915050565b6120b281611c82565b82525050565b6120c181611cbb565b82525050565b6120d081611cdc565b82525050565b600060c0820190506120eb60008301896120a9565b6120f860208301886120b8565b61210560408301876120b8565b61211260608301866120a9565b61211f60808301856120a9565b61212c60a08301846120c7565b979650505050505050565b600082825260208201905092915050565b600061215382611e43565b61215d8185612137565b935061216d818560208601611e5f565b61217681611e89565b840191505092915050565b600060e082019050612196600083018a6120a9565b6121a360208301896120b8565b81810360408301526121b58188612148565b905081810360608301526121c98187612148565b905081810360808301526121dd8186612148565b905081810360a08301526121f18185612148565b905061220060c08301846120c7565b98975050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61224e82611e89565b810181811067ffffffffffffffff8211171561226d5761226c612216565b5b80604052505050565b600061228061203c565b905061228c8282612245565b919050565b600067ffffffffffffffff8211156122ac576122ab612216565b5b6122b582611e89565b9050602081019050919050565b82818337600083830152505050565b60006122e46122df84612291565b612276565b905082815260208101848484011115612300576122ff612211565b5b61230b8482856122c2565b509392505050565b600082601f8301126123285761232761220c565b5b81356123388482602086016122d1565b91505092915050565b6000806000806080858703121561235b5761235a612046565b5b600085013567ffffffffffffffff8111156123795761237861204b565b5b61238587828801612313565b945050602085013567ffffffffffffffff8111156123a6576123a561204b565b5b6123b287828801612313565b935050604085013567ffffffffffffffff8111156123d3576123d261204b565b5b6123df87828801612313565b925050606085013567ffffffffffffffff811115612400576123ff61204b565b5b61240c87828801612313565b91505092959194509250565b600060208201905061242d60008301846120a9565b92915050565b61243c81611cbb565b811461244757600080fd5b50565b60008135905061245981612433565b92915050565b60008060006060848603121561247857612477612046565b5b600061248686828701612067565b93505060206124978682870161244a565b92505060406124a886828701612067565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061251b82611c82565b915061252683611c82565b925082820190508082111561253e5761253d6124e1565b5b92915050565b600061254f82611c82565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612581576125806124e1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806125d357607f821691505b6020821081036125e6576125e561258c565b5b50919050565b7f4f6e6c7920746865206f776e65722063616e206c6973742074686520736e656160008201527f6b65720000000000000000000000000000000000000000000000000000000000602082015250565b6000612648602383612137565b9150612653826125ec565b604082019050919050565b600060208201905081810360008301526126778161263b565b9050919050565b7f536e65616b657220697320616c7265616479206c697374656400000000000000600082015250565b60006126b4601983612137565b91506126bf8261267e565b602082019050919050565b600060208201905081810360008301526126e3816126a7565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261274c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261270f565b612756868361270f565b95508019841693508086168417925050509392505050565b6000819050919050565b600061279361278e61278984611c82565b61276e565b611c82565b9050919050565b6000819050919050565b6127ad83612778565b6127c16127b98261279a565b84845461271c565b825550505050565b600090565b6127d66127c9565b6127e18184846127a4565b505050565b5b81811015612805576127fa6000826127ce565b6001810190506127e7565b5050565b601f82111561284a5761281b816126ea565b612824846126ff565b81016020851015612833578190505b61284761283f856126ff565b8301826127e6565b50505b505050565b600082821c905092915050565b600061286d6000198460080261284f565b1980831691505092915050565b6000612886838361285c565b9150826002028217905092915050565b61289f82611e43565b67ffffffffffffffff8111156128b8576128b7612216565b5b6128c282546125bb565b6128cd828285612809565b600060209050601f83116001811461290057600084156128ee578287015190505b6128f8858261287a565b865550612960565b601f19841661290e866126ea565b60005b8281101561293657848901518255600182019150602085019450602081019050612911565b86831015612953578489015161294f601f89168261285c565b8355505b6001600288020188555050505b505050505050565b600060808201905081810360008301526129828187612148565b905081810360208301526129968186612148565b905081810360408301526129aa8185612148565b905081810360608301526129be8184612148565b905095945050505050565b7f43616e6e6f742073776170207769746820796f757273656c6600000000000000600082015250565b60006129ff601983612137565b9150612a0a826129c9565b602082019050919050565b60006020820190508181036000830152612a2e816129f2565b9050919050565b7f596f7520646f206e6f74206f776e207468652073656c656374656420736e656160008201527f6b65720000000000000000000000000000000000000000000000000000000000602082015250565b6000612a91602383612137565b9150612a9c82612a35565b604082019050919050565b60006020820190508181036000830152612ac081612a84565b9050919050565b7f546865206f74686572207573657220646f6573206e6f74206f776e207468652060008201527f73656c656374656420736e65616b657200000000000000000000000000000000602082015250565b6000612b23603083612137565b9150612b2e82612ac7565b604082019050919050565b60006020820190508181036000830152612b5281612b16565b9050919050565b7f536e65616b6572206d757374206265206c697374656420746f2062652072657160008201527f75657374656420666f7220612073776170000000000000000000000000000000602082015250565b6000612bb5603183612137565b9150612bc082612b59565b604082019050919050565b60006020820190508181036000830152612be481612ba8565b905091905056fea264697066735822122008ef5ddee559f554b9a8849a38cf0c9c3857e142f1841bf3f4f399c6f9dea11f64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063ce39fe2011610071578063ce39fe2014610171578063d50ed3a91461018f578063ecb75e1b146101ab578063ef50fd00146101db578063f2652a2c146101f9578063f9b1b92014610215576100a9565b8063504b5b5b146100ae5780637677fb92146100cc5780639c61d7a4146100ea578063bd2e065c1461011f578063c0ccb6b914610155575b600080fd5b6100b6610233565b6040516100c39190611df5565b60405180910390f35b6100d4610617565b6040516100e1919061201a565b60405180910390f35b61010460048036038101906100ff919061207c565b610aeb565b604051610116969594939291906120d6565b60405180910390f35b6101396004803603810190610134919061207c565b610b74565b60405161014c9796959493929190612181565b60405180910390f35b61016f600480360381019061016a919061207c565b610e03565b005b610179610f3d565b6040516101869190611df5565b60405180910390f35b6101a960048036038101906101a49190612341565b61110d565b005b6101c560048036038101906101c0919061207c565b6112ac565b6040516101d29190612418565b60405180910390f35b6101e36112d0565b6040516101f0919061201a565b60405180910390f35b610213600480360381019061020e919061245f565b611724565b005b61021d611b6c565b60405161022a9190612418565b60405180910390f35b60606000600580549050905060008060005b8381101561036a57600060058281548110610263576102626124b2565b5b906000526020600020015490503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061034157503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610356576001846103539190612510565b93505b50808061036290612544565b915050610245565b5060008267ffffffffffffffff81111561038757610386612216565b5b6040519080825280602002602001820160405280156103c057816020015b6103ad611b9d565b8152602001906001900390816103a55790505b50905060005b8481101561060c576000600582815481106103e4576103e36124b2565b5b906000526020600020015490503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806104c257503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b156105f857600460008281526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250508385815181106105dd576105dc6124b2565b5b60200260200101819052506001846105f59190612510565b93505b50808061060490612544565b9150506103c6565b508094505050505090565b606060006106256000611b79565b905060008060005b838110156106cd573373ffffffffffffffffffffffffffffffffffffffff166003600060018461065d9190612510565b815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106ba576001836106b79190612510565b92505b80806106c590612544565b91505061062d565b5060008267ffffffffffffffff8111156106ea576106e9612216565b5b60405190808252806020026020018201604052801561072357816020015b610710611c01565b8152602001906001900390816107085790505b50905060005b84811015610ae0573373ffffffffffffffffffffffffffffffffffffffff16600360006001846107599190612510565b815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610acd5760006001826107b59190612510565b90506000600360008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461084a906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610876906125bb565b80156108c35780601f10610898576101008083540402835291602001916108c3565b820191906000526020600020905b8154815290600101906020018083116108a657829003601f168201915b505050505081526020016003820180546108dc906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610908906125bb565b80156109555780601f1061092a57610100808354040283529160200191610955565b820191906000526020600020905b81548152906001019060200180831161093857829003601f168201915b5050505050815260200160048201805461096e906125bb565b80601f016020809104026020016040519081016040528092919081815260200182805461099a906125bb565b80156109e75780601f106109bc576101008083540402835291602001916109e7565b820191906000526020600020905b8154815290600101906020018083116109ca57829003601f168201915b50505050508152602001600582018054610a00906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2c906125bb565b8015610a795780601f10610a4e57610100808354040283529160200191610a79565b820191906000526020600020905b815481529060010190602001808311610a5c57829003601f168201915b505050505081526020016006820160009054906101000a900460ff161515151581525050848681518110610ab057610aaf6124b2565b5b6020026020010181905250600185610ac89190612510565b945050505b8080610ad890612544565b915050610729565b508094505050505090565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050160009054906101000a900460ff16905086565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054610bc3906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610bef906125bb565b8015610c3c5780601f10610c1157610100808354040283529160200191610c3c565b820191906000526020600020905b815481529060010190602001808311610c1f57829003601f168201915b505050505090806003018054610c51906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7d906125bb565b8015610cca5780601f10610c9f57610100808354040283529160200191610cca565b820191906000526020600020905b815481529060010190602001808311610cad57829003601f168201915b505050505090806004018054610cdf906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0b906125bb565b8015610d585780601f10610d2d57610100808354040283529160200191610d58565b820191906000526020600020905b815481529060010190602001808311610d3b57829003601f168201915b505050505090806005018054610d6d906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610d99906125bb565b8015610de65780601f10610dbb57610100808354040283529160200191610de6565b820191906000526020600020905b815481529060010190602001808311610dc957829003601f168201915b5050505050908060060160009054906101000a900460ff16905087565b3373ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ea7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9e9061265e565b60405180910390fd5b6003600082815260200190815260200160002060060160009054906101000a900460ff1615610f0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f02906126ca565b60405180910390fd5b60016003600083815260200190815260200160002060060160006101000a81548160ff02191690831515021790555050565b60606000600580549050905060008167ffffffffffffffff811115610f6557610f64612216565b5b604051908082528060200260200182016040528015610f9e57816020015b610f8b611b9d565b815260200190600190039081610f835790505b50905060005b8281101561110457600060058281548110610fc257610fc16124b2565b5b90600052602060002001549050600460008281526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250508383815181106110e5576110e46124b2565b5b60200260200101819052505080806110fc90612544565b915050610fa4565b50809250505090565b6111176000611b87565b60006111236000611b79565b90506040518060e001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815260200160001515815250600360008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816111ea9190612896565b5060608201518160030190816112009190612896565b5060808201518160040190816112169190612896565b5060a082015181600501908161122c9190612896565b5060c08201518160060160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16817fa17f2322d90c5b35b8f11084c3751ccc6ad650ef0952cf7cc1f6528e4c0bf8b28787878760405161129d9493929190612968565b60405180910390a35050505050565b600581815481106112bc57600080fd5b906000526020600020016000915090505481565b606060006112de6000611b79565b905060008060005b8381101561134657600360006001836112ff9190612510565b815260200190815260200160002060060160009054906101000a900460ff1615611333576001836113309190612510565b92505b808061133e90612544565b9150506112e6565b5060008267ffffffffffffffff81111561136357611362612216565b5b60405190808252806020026020018201604052801561139c57816020015b611389611c01565b8152602001906001900390816113815790505b50905060005b8481101561171957600360006001836113bb9190612510565b815260200190815260200160002060060160009054906101000a900460ff16156117065760006001826113ee9190612510565b90506000600360008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611483906125bb565b80601f01602080910402602001604051908101604052809291908181526020018280546114af906125bb565b80156114fc5780601f106114d1576101008083540402835291602001916114fc565b820191906000526020600020905b8154815290600101906020018083116114df57829003601f168201915b50505050508152602001600382018054611515906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054611541906125bb565b801561158e5780601f106115635761010080835404028352916020019161158e565b820191906000526020600020905b81548152906001019060200180831161157157829003601f168201915b505050505081526020016004820180546115a7906125bb565b80601f01602080910402602001604051908101604052809291908181526020018280546115d3906125bb565b80156116205780601f106115f557610100808354040283529160200191611620565b820191906000526020600020905b81548152906001019060200180831161160357829003601f168201915b50505050508152602001600582018054611639906125bb565b80601f0160208091040260200160405190810160405280929190818152602001828054611665906125bb565b80156116b25780601f10611687576101008083540402835291602001916116b2565b820191906000526020600020905b81548152906001019060200180831161169557829003601f168201915b505050505081526020016006820160009054906101000a900460ff1615151515815250508486815181106116e9576116e86124b2565b5b60200260200101819052506001856117019190612510565b945050505b808061171190612544565b9150506113a2565b508094505050505090565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178990612a15565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182d90612aa7565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146118da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d190612b39565b60405180910390fd5b6003600084815260200190815260200160002060060160009054906101000a900460ff1661193d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193490612bcb565b60405180910390fd5b816003600085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336003600083815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006003600085815260200190815260200160002060060160006101000a81548160ff02191690831515021790555060006003600083815260200190815260200160002060060160006101000a81548160ff0219169083151502179055506003600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16847f1f8dc5fa55799883a53d8c121a73aaec7d7f62120bffa74610ad588f4493d06960405160405180910390a43373ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16827f1f8dc5fa55799883a53d8c121a73aaec7d7f62120bffa74610ad588f4493d06960405160405180910390a4505050565b6000600580549050905090565b600081600001549050919050565b6001816000016000828254019250508190555050565b6040518060c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001606081526020016000151581525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611c9581611c82565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cc682611c9b565b9050919050565b611cd681611cbb565b82525050565b60008115159050919050565b611cf181611cdc565b82525050565b60c082016000820151611d0d6000850182611c8c565b506020820151611d206020850182611ccd565b506040820151611d336040850182611ccd565b506060820151611d466060850182611c8c565b506080820151611d596080850182611c8c565b5060a0820151611d6c60a0850182611ce8565b50505050565b6000611d7e8383611cf7565b60c08301905092915050565b6000602082019050919050565b6000611da282611c56565b611dac8185611c61565b9350611db783611c72565b8060005b83811015611de8578151611dcf8882611d72565b9750611dda83611d8a565b925050600181019050611dbb565b5085935050505092915050565b60006020820190508181036000830152611e0f8184611d97565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e7d578082015181840152602081019050611e62565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ea582611e43565b611eaf8185611e4e565b9350611ebf818560208601611e5f565b611ec881611e89565b840191505092915050565b600060e083016000830151611eeb6000860182611c8c565b506020830151611efe6020860182611ccd565b5060408301518482036040860152611f168282611e9a565b91505060608301518482036060860152611f308282611e9a565b91505060808301518482036080860152611f4a8282611e9a565b91505060a083015184820360a0860152611f648282611e9a565b91505060c0830151611f7960c0860182611ce8565b508091505092915050565b6000611f908383611ed3565b905092915050565b6000602082019050919050565b6000611fb082611e17565b611fba8185611e22565b935083602082028501611fcc85611e33565b8060005b858110156120085784840389528151611fe98582611f84565b9450611ff483611f98565b925060208a01995050600181019050611fd0565b50829750879550505050505092915050565b600060208201905081810360008301526120348184611fa5565b905092915050565b6000604051905090565b600080fd5b600080fd5b61205981611c82565b811461206457600080fd5b50565b60008135905061207681612050565b92915050565b60006020828403121561209257612091612046565b5b60006120a084828501612067565b91505092915050565b6120b281611c82565b82525050565b6120c181611cbb565b82525050565b6120d081611cdc565b82525050565b600060c0820190506120eb60008301896120a9565b6120f860208301886120b8565b61210560408301876120b8565b61211260608301866120a9565b61211f60808301856120a9565b61212c60a08301846120c7565b979650505050505050565b600082825260208201905092915050565b600061215382611e43565b61215d8185612137565b935061216d818560208601611e5f565b61217681611e89565b840191505092915050565b600060e082019050612196600083018a6120a9565b6121a360208301896120b8565b81810360408301526121b58188612148565b905081810360608301526121c98187612148565b905081810360808301526121dd8186612148565b905081810360a08301526121f18185612148565b905061220060c08301846120c7565b98975050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61224e82611e89565b810181811067ffffffffffffffff8211171561226d5761226c612216565b5b80604052505050565b600061228061203c565b905061228c8282612245565b919050565b600067ffffffffffffffff8211156122ac576122ab612216565b5b6122b582611e89565b9050602081019050919050565b82818337600083830152505050565b60006122e46122df84612291565b612276565b905082815260208101848484011115612300576122ff612211565b5b61230b8482856122c2565b509392505050565b600082601f8301126123285761232761220c565b5b81356123388482602086016122d1565b91505092915050565b6000806000806080858703121561235b5761235a612046565b5b600085013567ffffffffffffffff8111156123795761237861204b565b5b61238587828801612313565b945050602085013567ffffffffffffffff8111156123a6576123a561204b565b5b6123b287828801612313565b935050604085013567ffffffffffffffff8111156123d3576123d261204b565b5b6123df87828801612313565b925050606085013567ffffffffffffffff811115612400576123ff61204b565b5b61240c87828801612313565b91505092959194509250565b600060208201905061242d60008301846120a9565b92915050565b61243c81611cbb565b811461244757600080fd5b50565b60008135905061245981612433565b92915050565b60008060006060848603121561247857612477612046565b5b600061248686828701612067565b93505060206124978682870161244a565b92505060406124a886828701612067565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061251b82611c82565b915061252683611c82565b925082820190508082111561253e5761253d6124e1565b5b92915050565b600061254f82611c82565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612581576125806124e1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806125d357607f821691505b6020821081036125e6576125e561258c565b5b50919050565b7f4f6e6c7920746865206f776e65722063616e206c6973742074686520736e656160008201527f6b65720000000000000000000000000000000000000000000000000000000000602082015250565b6000612648602383612137565b9150612653826125ec565b604082019050919050565b600060208201905081810360008301526126778161263b565b9050919050565b7f536e65616b657220697320616c7265616479206c697374656400000000000000600082015250565b60006126b4601983612137565b91506126bf8261267e565b602082019050919050565b600060208201905081810360008301526126e3816126a7565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261274c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261270f565b612756868361270f565b95508019841693508086168417925050509392505050565b6000819050919050565b600061279361278e61278984611c82565b61276e565b611c82565b9050919050565b6000819050919050565b6127ad83612778565b6127c16127b98261279a565b84845461271c565b825550505050565b600090565b6127d66127c9565b6127e18184846127a4565b505050565b5b81811015612805576127fa6000826127ce565b6001810190506127e7565b5050565b601f82111561284a5761281b816126ea565b612824846126ff565b81016020851015612833578190505b61284761283f856126ff565b8301826127e6565b50505b505050565b600082821c905092915050565b600061286d6000198460080261284f565b1980831691505092915050565b6000612886838361285c565b9150826002028217905092915050565b61289f82611e43565b67ffffffffffffffff8111156128b8576128b7612216565b5b6128c282546125bb565b6128cd828285612809565b600060209050601f83116001811461290057600084156128ee578287015190505b6128f8858261287a565b865550612960565b601f19841661290e866126ea565b60005b8281101561293657848901518255600182019150602085019450602081019050612911565b86831015612953578489015161294f601f89168261285c565b8355505b6001600288020188555050505b505050505050565b600060808201905081810360008301526129828187612148565b905081810360208301526129968186612148565b905081810360408301526129aa8185612148565b905081810360608301526129be8184612148565b905095945050505050565b7f43616e6e6f742073776170207769746820796f757273656c6600000000000000600082015250565b60006129ff601983612137565b9150612a0a826129c9565b602082019050919050565b60006020820190508181036000830152612a2e816129f2565b9050919050565b7f596f7520646f206e6f74206f776e207468652073656c656374656420736e656160008201527f6b65720000000000000000000000000000000000000000000000000000000000602082015250565b6000612a91602383612137565b9150612a9c82612a35565b604082019050919050565b60006020820190508181036000830152612ac081612a84565b9050919050565b7f546865206f74686572207573657220646f6573206e6f74206f776e207468652060008201527f73656c656374656420736e65616b657200000000000000000000000000000000602082015250565b6000612b23603083612137565b9150612b2e82612ac7565b604082019050919050565b60006020820190508181036000830152612b5281612b16565b9050919050565b7f536e65616b6572206d757374206265206c697374656420746f2062652072657160008201527f75657374656420666f7220612073776170000000000000000000000000000000602082015250565b6000612bb5603183612137565b9150612bc082612b59565b604082019050919050565b60006020820190508181036000830152612be481612ba8565b905091905056fea264697066735822122008ef5ddee559f554b9a8849a38cf0c9c3857e142f1841bf3f4f399c6f9dea11f64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getListedSneakers()": {
        "details": "Get a list of all sneakers currently listed in the marketplace.",
        "returns": {
          "_0": "An array of Sneaker structs representing the listed sneakers."
        }
      },
      "getMySneakers()": {
        "details": "Get a list of sneakers owned by the caller.",
        "returns": {
          "_0": "An array of Sneaker structs representing the user's sneakers."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 83,
        "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
        "label": "_sneakerIds",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Counter)5_storage"
      },
      {
        "astId": 86,
        "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
        "label": "_swapIds",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(Counter)5_storage"
      },
      {
        "astId": 88,
        "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address_payable"
      },
      {
        "astId": 121,
        "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
        "label": "sneakers",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Sneaker)103_storage)"
      },
      {
        "astId": 126,
        "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
        "label": "swapRequests",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(SwapRequest)116_storage)"
      },
      {
        "astId": 129,
        "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
        "label": "allSwapRequestIds",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_uint256)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(Sneaker)103_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct SneakerMarketplace.Sneaker)",
        "numberOfBytes": "32",
        "value": "t_struct(Sneaker)103_storage"
      },
      "t_mapping(t_uint256,t_struct(SwapRequest)116_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct SneakerMarketplace.SwapRequest)",
        "numberOfBytes": "32",
        "value": "t_struct(SwapRequest)116_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Counter)5_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Sneaker)103_storage": {
        "encoding": "inplace",
        "label": "struct SneakerMarketplace.Sneaker",
        "members": [
          {
            "astId": 90,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 92,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 94,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 96,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "imageUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 98,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "color",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 100,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "size",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 102,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "listed",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(SwapRequest)116_storage": {
        "encoding": "inplace",
        "label": "struct SneakerMarketplace.SwapRequest",
        "members": [
          {
            "astId": 105,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 107,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "requester",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 109,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "owner",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 111,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "mySneakerId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 113,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "theirSneakerId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 115,
            "contract": "contracts/SneakerMarketPlace.sol:SneakerMarketplace",
            "label": "approved",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}